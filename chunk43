'use client'
import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Progress } from '@/components/ui/progress'
import { Checkbox } from '@/components/ui/checkbox'
import { AlertCircle } from 'lucide-react'
import Link from 'next/link'
import { useRouter } from 'next/navigation'

const symptoms = [
  { id: 'chest_pain', label: 'Chest pain or tightness', risk: 3 },
  { id: 'short_breath', label: 'Shortness of breath', risk: 4 },
  { id: 'persistent_cough', label: 'Persistent cough (especially with blood)', risk: 4 },
  { id: 'fatigue', label: 'Unexplained fatigue or weakness', risk: 2 },
  { id: 'weight_loss', label: 'Unintentional weight loss', risk: 3 },
  { id: 'swallowing_difficulty', label: 'Difficulty swallowing', risk: 3 },
  { id: 'abdominal_pain', label: 'Abdominal pain or swelling', risk: 2 },
  { id: 'fever_night_sweats', label: 'Fever or night sweats', risk: 2 }
]

export default function SymptomQuiz() {
  const router = useRouter()
  const [step, setStep] = useState(1)
  const [riskScore, setRiskScore] = useState(0)
  const [selectedSymptoms, setSelectedSymptoms] = useState<string[]>([])
  const totalSteps = 4

  const handleNext = () => {
    if (step < totalSteps) setStep(step + 1)
    else {
      router.push('/contact?riskScore=' + riskScore + '&symptoms=' + selectedSymptoms.join(','))
    }
  }

  const toggleSymptom = (id: string, risk: number) => {
    setSelectedSymptoms(prev => 
      prev.includes(id) ? prev.filter(s => s !== id) : [...prev, id]
    )
    setRiskScore(prev => prev + (selectedSymptoms.includes(id) ? -risk : risk))
  }

  const getRiskLevel = (score: number) => {
    if (score >= 15) return { level: 'High Risk', color: 'bg-red-100 text-red-800' }
    if (score >= 8) return { level: 'Medium Risk', color: 'bg-yellow-100 text-yellow-800' }
    return { level: 'Low Risk', color: 'bg-green-100 text-green-800' }
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white py-8">
      <div className="max-w-2xl mx-auto px-4">
        <Card className="shadow-lg">
          <CardHeader className="text-center">
            <CardTitle className="text-2xl">Mesothelioma Symptom Quiz</CardTitle>
            <p className="text-gray-600">Take 2 minutes to assess your risk. This is not a diagnosisâ€”see a doctor for professional advice.</p>
            <Progress value={(step / totalSteps) * 100} className="mt-4" />
            <p className="text-sm text-gray-500">Step {step} of {totalSteps}</p>
          </CardHeader>
          <CardContent className="space-y-6">
            {step === 1 && (
              <div>
                <h3 className="text-lg font-semibold mb-4">Step 1: Exposure History</h3>
                <div className="grid grid-cols-2 gap-4 mb-4">
                  <label className="flex items-center space-x-2">
                    <Checkbox id="exposed" />
                    <span>Possible asbestos exposure (work/home)</span>
                  </label>
                  <label className="flex items-center space-x-2">
                    <Checkbox id="family" />
                    <span>Family member with exposure</span>
                  </label>
                </div>
                <Button onClick={() => setStep(2)} className="w-full">Next</Button>
              </div>
            )}
            {step === 2 && (
              <div>
                <h3 className="text-lg font-semibold mb-4">Step 2: Current Symptoms</h3>
                <div className="space-y-3 max-h-60 overflow-y-auto">
                  {symptoms.map(symptom => (
                    <label key={symptom.id} className="flex items-start space-x-3 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
                      <Checkbox 
                        checked={selectedSymptoms.includes(symptom.id)}
                        onCheckedChange={() => toggleSymptom(symptom.id, symptom.risk)}
                      />
                      <span className="text-sm">{symptom.label}</span>
                    </label>
                  ))}
                </div>
                <div className="mt-4 p-3 bg-gray-50 rounded-lg">
                  <p className="text-sm text-gray-600">Preliminary Risk: <span className={getRiskLevel(riskScore).color}>{getRiskLevel(riskScore).level} ({riskScore}/24)</span></p>
                </div>
                <Button onClick={handleNext} className="w-full">Next</Button>
              </div>
            )}
            {step === 3 && (
              <div>
                <h3 className="text-lg font-semibold mb-4">Step 3: Medical History</h3>
                <div className="space-y-4">
                  <label className="flex items-center space-x-2">
                    <Checkbox id="diagnosis" />
                    <span>Diagnosed with lung issues or cancer</span>
                  </label>
                  <label className="flex items-center space-x-2">
                    <Checkbox id="smoker" />
                    <span>History of smoking</span>
                  </label>
                </div>
                <Button onClick={() => setStep(4)} className="w-full">Next</Button>
              </div>
            )}
            {step === 4 && (
              <div className="text-center">
                <AlertCircle className="w-12 h-12 text-yellow-500 mx-auto mb-4" />
                <h3 className="text-lg font-semibold mb-4">Quiz Complete!</h3>
                <p className="text-gray-600 mb-6">Your risk score: <strong className={getRiskLevel(riskScore).color}>{getRiskLevel(riskScore).level} ({riskScore}/24)</strong></p>
                <p className="text-sm text-gray-500 mb-6">Based on your answers, you may be at risk for asbestos-related illness. Consult a doctor immediately.</p>
                <div className="space-y-3">
                  <Button onClick={handleNext} className="w-full bg-red-600 hover:bg-red-700">
                    Get Free Legal Help Now
                  </Button>
                  <Link href="/asbestos-exposure">
                    <Button variant="outline" className="w-full">Learn More About Exposure</Button>
                  </Link>
                </div>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
